var React = require('react');
var Radar = require('./Radar');
var OssList = require('./OssList');
var Calendar = require('./Calendar');
var FloatingLabel = require('./FloatingLabel');
var Constants = require('../Constants');
var RadarStore = require('../stores/RadarStore');
var RadarAction = require('../actions/RadarAction');
require('date-utils');

var Router = require('react-router'); 
var DefaultRoute = Router.DefaultRoute;
var Link = Router.Link;
var Route = Router.Route;
var RouteHandler = Router.RouteHandler;

var Main = React.createClass({displayName: "Main",
  mixins: [ Router.State ],
  getInitialState: function() {
    return {
      selectedOssId: null
    };
  },
  componentDidMount: function() {
    RadarStore.addStoreChangeListener(this._radarStoreChange);
  },
  componentWillUnmount: function() {
    RadarStore.removeStoreChangeListener(this._radarStoreChange);
  },
  _radarStoreChange: function() {
    this.setState({
      selectedOssId: RadarStore.getSelectedOss()
    });
  },
  render: function() {
    var radarContainerStyle = {
      position: 'relative'
    };
    return (
      React.createElement("div", {key: "radar-scope-main", className: "radar-scope"}, 
        React.createElement("div", {className: "radar-scope-header"}, 
          React.createElement("span", null, this.props.yearMonth.substr(0, 4)), 
          React.createElement("span", null, " 年 "), 
          React.createElement("span", null, this.props.yearMonth.substr(4)), 
          React.createElement("span", null, " 月のレーダースコープ")
        ), 
        React.createElement("div", {className: "radar-scope-body"}, 
          React.createElement(Calendar, {rankDates: this.props.rankDates}), 
          React.createElement("span", {key: "radar-scope-arrow1", className: "glyphicon glyphicon-chevron-right"}), 
          React.createElement(OssList, {products: this.props.products, dotPosition: this.props.dotPosition, yearMonth: this.props.yearMonth, selectedOssId: this.state.selectedOssId}), 
          React.createElement("span", {key: "radar-scope-arrow2", className: "glyphicon glyphicon-chevron-right"}), 
          React.createElement("div", {style: radarContainerStyle}, 
            React.createElement(Radar, {yearMonth: this.props.yearMonth, categories: this.props.categories, dotPosition: this.props.dotPosition, selectedOssId: this.state.selectedOssId, isChildCategory: this.props.isChildCategory}), 
            React.createElement(FloatingLabel, {dotPosition: this.props.dotPosition, selectedOssId: this.state.selectedOssId})
          )
        )
      )
    );
  }
});

module.exports = Main;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvTWFpbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzdCLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUMvQixJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDbkMsSUFBSSxRQUFRLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3JDLElBQUksYUFBYSxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQy9DLElBQUksU0FBUyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUN4QyxJQUFJLFVBQVUsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztBQUNqRCxJQUFJLFdBQVcsR0FBRyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQUNwRCxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7O0FBRXRCLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUNyQyxJQUFJLFlBQVksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO0FBQ3ZDLElBQUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7QUFDdkIsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztBQUN6QixJQUFJLFlBQVksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDOztBQUV2QyxJQUFJLDBCQUEwQixvQkFBQTtFQUM1QixNQUFNLEVBQUUsRUFBRSxNQUFNLENBQUMsS0FBSyxFQUFFO0VBQ3hCLGVBQWUsRUFBRSxXQUFXO0lBQzFCLE9BQU87TUFDTCxhQUFhLEVBQUUsSUFBSTtLQUNwQixDQUFDO0dBQ0g7RUFDRCxpQkFBaUIsRUFBRSxXQUFXO0lBQzVCLFVBQVUsQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztHQUMz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VUFDMUYsQ0FBQTtRQUNGLENBQUE7TUFDRixDQUFBO01BQ047R0FDSDtBQUNILENBQUMsQ0FBQyxDQUFDOztBQUVILE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDIiwiZmlsZSI6ImNvbXBvbmVudHMvTWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgUmFkYXIgPSByZXF1aXJlKCcuL1JhZGFyJyk7XG52YXIgT3NzTGlzdCA9IHJlcXVpcmUoJy4vT3NzTGlzdCcpO1xudmFyIENhbGVuZGFyID0gcmVxdWlyZSgnLi9DYWxlbmRhcicpO1xudmFyIEZsb2F0aW5nTGFiZWwgPSByZXF1aXJlKCcuL0Zsb2F0aW5nTGFiZWwnKTtcbnZhciBDb25zdGFudHMgPSByZXF1aXJlKCcuLi9Db25zdGFudHMnKTtcbnZhciBSYWRhclN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL1JhZGFyU3RvcmUnKTtcbnZhciBSYWRhckFjdGlvbiA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvUmFkYXJBY3Rpb24nKTtcbnJlcXVpcmUoJ2RhdGUtdXRpbHMnKTtcblxudmFyIFJvdXRlciA9IHJlcXVpcmUoJ3JlYWN0LXJvdXRlcicpOyBcbnZhciBEZWZhdWx0Um91dGUgPSBSb3V0ZXIuRGVmYXVsdFJvdXRlO1xudmFyIExpbmsgPSBSb3V0ZXIuTGluaztcbnZhciBSb3V0ZSA9IFJvdXRlci5Sb3V0ZTtcbnZhciBSb3V0ZUhhbmRsZXIgPSBSb3V0ZXIuUm91dGVIYW5kbGVyO1xuXG52YXIgTWFpbiA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgbWl4aW5zOiBbIFJvdXRlci5TdGF0ZSBdLFxuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzZWxlY3RlZE9zc0lkOiBudWxsXG4gICAgfTtcbiAgfSxcbiAgY29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xuICAgIFJhZGFyU3RvcmUuYWRkU3RvcmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9yYWRhclN0b3JlQ2hhbmdlKTtcbiAgfSxcbiAgY29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuICAgIFJhZGFyU3RvcmUucmVtb3ZlU3RvcmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9yYWRhclN0b3JlQ2hhbmdlKTtcbiAgfSxcbiAgX3JhZGFyU3RvcmVDaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgc2VsZWN0ZWRPc3NJZDogUmFkYXJTdG9yZS5nZXRTZWxlY3RlZE9zcygpXG4gICAgfSk7XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHJhZGFyQ29udGFpbmVyU3R5bGUgPSB7XG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJ1xuICAgIH07XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYga2V5PVwicmFkYXItc2NvcGUtbWFpblwiIGNsYXNzTmFtZT1cInJhZGFyLXNjb3BlXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmFkYXItc2NvcGUtaGVhZGVyXCI+XG4gICAgICAgICAgPHNwYW4+e3RoaXMucHJvcHMueWVhck1vbnRoLnN1YnN0cigwLCA0KX08L3NwYW4+XG4gICAgICAgICAgPHNwYW4+Jm5ic3A75bm0Jm5ic3A7PC9zcGFuPlxuICAgICAgICAgIDxzcGFuPnt0aGlzLnByb3BzLnllYXJNb250aC5zdWJzdHIoNCl9PC9zcGFuPlxuICAgICAgICAgIDxzcGFuPiZuYnNwO+aciOOBruODrOODvOODgOODvOOCueOCs+ODvOODlzwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmFkYXItc2NvcGUtYm9keVwiPlxuICAgICAgICAgIDxDYWxlbmRhciByYW5rRGF0ZXM9e3RoaXMucHJvcHMucmFua0RhdGVzfS8+XG4gICAgICAgICAgPHNwYW4ga2V5PVwicmFkYXItc2NvcGUtYXJyb3cxXCIgY2xhc3NOYW1lPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXJpZ2h0XCI+PC9zcGFuPlxuICAgICAgICAgIDxPc3NMaXN0IHByb2R1Y3RzPXt0aGlzLnByb3BzLnByb2R1Y3RzfSBkb3RQb3NpdGlvbj17dGhpcy5wcm9wcy5kb3RQb3NpdGlvbn0geWVhck1vbnRoPXt0aGlzLnByb3BzLnllYXJNb250aH0gc2VsZWN0ZWRPc3NJZD17dGhpcy5zdGF0ZS5zZWxlY3RlZE9zc0lkfS8+XG4gICAgICAgICAgPHNwYW4ga2V5PVwicmFkYXItc2NvcGUtYXJyb3cyXCIgY2xhc3NOYW1lPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXJpZ2h0XCI+PC9zcGFuPlxuICAgICAgICAgIDxkaXYgc3R5bGU9e3JhZGFyQ29udGFpbmVyU3R5bGV9PlxuICAgICAgICAgICAgPFJhZGFyIHllYXJNb250aD17dGhpcy5wcm9wcy55ZWFyTW9udGh9IGNhdGVnb3JpZXM9e3RoaXMucHJvcHMuY2F0ZWdvcmllc30gZG90UG9zaXRpb249e3RoaXMucHJvcHMuZG90UG9zaXRpb259IHNlbGVjdGVkT3NzSWQ9e3RoaXMuc3RhdGUuc2VsZWN0ZWRPc3NJZH0gaXNDaGlsZENhdGVnb3J5PXt0aGlzLnByb3BzLmlzQ2hpbGRDYXRlZ29yeX0vPlxuICAgICAgICAgICAgPEZsb2F0aW5nTGFiZWwgZG90UG9zaXRpb249e3RoaXMucHJvcHMuZG90UG9zaXRpb259IHNlbGVjdGVkT3NzSWQ9e3RoaXMuc3RhdGUuc2VsZWN0ZWRPc3NJZH0vPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1haW47XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=